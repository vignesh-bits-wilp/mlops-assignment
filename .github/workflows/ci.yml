name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run linting
      run: |
        pip install flake8
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run tests
      run: |
        pip install pytest pytest-cov
        pytest tests/test_data_ingestion.py tests/test_api.py tests/test_api_standalone.py -v --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      continue-on-error: true
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: vignesh-bits-wilp/housing-api
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      continue-on-error: true
        
    - name: Build success message
      run: |
        echo "âœ… CI/CD Pipeline completed!"
        echo "Note: Docker Hub push requires DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets."

  deploy-local:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy locally (simulation)
      run: |
        echo "ðŸš€ Simulating local deployment..."
        echo "To deploy locally, run:"
        echo "docker pull vignesh-bits-wilp/housing-api:latest"
        echo "docker run -p 8000:8000 vignesh-bits-wilp/housing-api:latest"
        echo ""
        echo "To deploy to EC2, run:"
        echo "ssh ec2-user@your-ec2-instance"
        echo "docker pull vignesh-bits-wilp/housing-api:latest"
        echo "docker run -d -p 8000:8000 --name housing-api vignesh-bits-wilp/housing-api:latest"
        
    - name: Test deployment
      run: |
        echo "ðŸ§ª Testing deployment..."
        echo "Health check: curl http://localhost:8000/health"
        echo "Prediction test: curl -X POST http://localhost:8000/predict -H 'Content-Type: application/json' -d '{\"MedInc\": 8.3252, \"HouseAge\": 41.0, \"AveRooms\": 6.984127, \"AveBedrms\": 1.023810, \"Population\": 322.0, \"AveOccup\": 2.555556, \"Latitude\": 37.88, \"Longitude\": -122.23}'"
